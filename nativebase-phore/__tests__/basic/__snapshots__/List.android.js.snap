// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Basic List 1`] = `
<RCTScrollView
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  dataArray={
    Array [
      "Simon Mignolet",
      "Nathaniel Clyne",
      "Dejan Lovren",
      "Mama Sakho",
      "Alberto Moreno",
      "Emre Can",
      "Joe Allen",
      "Phil Coutinho",
    ]
  }
  dataSource={
    ListViewDataSource {
      "items": 8,
    }
  }
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  enableEmptySections={true}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  renderRow={[Function]}
  renderScrollComponent={[Function]}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
  virtual={undefined}
>
  <View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Simon Mignolet
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
            virtual={undefined}
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Nathaniel Clyne
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
            virtual={undefined}
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Dejan Lovren
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
            virtual={undefined}
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Mama Sakho
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
            virtual={undefined}
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Alberto Moreno
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
            virtual={undefined}
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Emre Can
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
            virtual={undefined}
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Joe Allen
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
            virtual={undefined}
          >
            
          </Text>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Phil Coutinho
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Array [
                  Object {},
                  Object {},
                ],
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
            virtual={undefined}
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders ListItem avatar 1`] = `
<RCTScrollView
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  dataArray={
    Array [
      Object {
        "img": 1,
        "note": "Its time to build a difference . .",
        "text": "Kumar Pratik",
      },
      Object {
        "img": 1,
        "note": "One needs courage to be happy and smiling all time . . ",
        "text": "Kumar Sanket",
      },
    ]
  }
  dataSource={
    ListViewDataSource {
      "items": 2,
    }
  }
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  enableEmptySections={true}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  renderRow={[Function]}
  renderScrollComponent={[Function]}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
  virtual={undefined}
>
  <View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        thumbnail={true}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Image
            size={55}
            source={1}
            square={true}
            style={Object {}}
            virtual={undefined}
          />
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Kumar Pratik
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            note={true}
            numberOfLines={1}
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Its time to build a difference . .
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffbcbc",
                  "borderColor": "red",
                  "borderWidth": 1,
                  "height": 100,
                  "justifyContent": "center",
                  "margin": 10,
                  "width": 300,
                },
                Object {
                  "borderRadius": 2,
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#333333",
                  "margin": 20,
                }
              }
            >
              TouchableNativeFeedback is not supported on this platform!
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        thumbnail={true}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Image
            size={55}
            source={1}
            square={true}
            style={Object {}}
            virtual={undefined}
          />
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Kumar Sanket
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            note={true}
            numberOfLines={1}
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            One needs courage to be happy and smiling all time . . 
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffbcbc",
                  "borderColor": "red",
                  "borderWidth": 1,
                  "height": 100,
                  "justifyContent": "center",
                  "margin": 10,
                  "width": 300,
                },
                Object {
                  "borderRadius": 2,
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#333333",
                  "margin": 20,
                }
              }
            >
              TouchableNativeFeedback is not supported on this platform!
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`renders ListItem icon 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
  virtual={undefined}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      icon={true}
      style={Object {}}
      virtual={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffbcbc",
                "borderColor": "red",
                "borderWidth": 1,
                "height": 100,
                "justifyContent": "center",
                "margin": 10,
                "width": 300,
              },
              Object {
                "backgroundColor": "#FF9501",
                "borderRadius": 2,
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#333333",
                "margin": 20,
              }
            }
          >
            TouchableNativeFeedback is not supported on this platform!
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={Object {}}
          uppercase={false}
          virtual={undefined}
        >
          Airplane Mode
        </Text>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <AndroidSwitch
          disabled={false}
          enabled={true}
          on={false}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          onTintColor="#50B948"
          style={Object {}}
          trackTintColor={undefined}
          value={false}
          virtual={undefined}
        />
      </View>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      icon={true}
      style={Object {}}
      virtual={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffbcbc",
                "borderColor": "red",
                "borderWidth": 1,
                "height": 100,
                "justifyContent": "center",
                "margin": 10,
                "width": 300,
              },
              Object {
                "backgroundColor": "#007AFF",
                "borderRadius": 2,
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#333333",
                "margin": 20,
              }
            }
          >
            TouchableNativeFeedback is not supported on this platform!
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={Object {}}
          uppercase={false}
          virtual={undefined}
        >
          Bluetooth
        </Text>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={Object {}}
          uppercase={false}
          virtual={undefined}
        >
          On
        </Text>
        <Text
          accessible={true}
          active={true}
          allowFontScaling={false}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
          virtual={undefined}
        >
          
        </Text>
      </View>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      icon={true}
      style={Object {}}
      virtual={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffbcbc",
                "borderColor": "red",
                "borderWidth": 1,
                "height": 100,
                "justifyContent": "center",
                "margin": 10,
                "width": 300,
              },
              Object {
                "backgroundColor": "#4CDA64",
                "borderRadius": 2,
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#333333",
                "margin": 20,
              }
            }
          >
            TouchableNativeFeedback is not supported on this platform!
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={Object {}}
          uppercase={false}
          virtual={undefined}
        >
          Mobile Data
        </Text>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#3F51B5",
                  "fontSize": 23,
                  "lineHeight": 24,
                },
                Object {
                  "fontFamily": "Ionicons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      icon={true}
      style={Object {}}
      virtual={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffbcbc",
                "borderColor": "red",
                "borderWidth": 1,
                "height": 100,
                "justifyContent": "center",
                "margin": 10,
                "width": 300,
              },
              Object {
                "backgroundColor": "#FD3C2D",
                "borderRadius": 2,
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#333333",
                "margin": 20,
              }
            }
          >
            TouchableNativeFeedback is not supported on this platform!
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={Object {}}
          uppercase={false}
          virtual={undefined}
        >
          Notifications
        </Text>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <Text
          accessible={true}
          active={true}
          allowFontScaling={false}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 12,
              },
              Array [
                Object {},
                Object {},
              ],
              Object {
                "fontFamily": "Ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
          virtual={undefined}
        >
          
        </Text>
      </View>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      icon={true}
      last={true}
      style={Object {}}
      virtual={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffbcbc",
                "borderColor": "red",
                "borderWidth": 1,
                "height": 100,
                "justifyContent": "center",
                "margin": 10,
                "width": 300,
              },
              Object {
                "backgroundColor": "#5855D6",
                "borderRadius": 2,
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#333333",
                "margin": 20,
              }
            }
          >
            TouchableNativeFeedback is not supported on this platform!
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={Object {}}
          uppercase={false}
          virtual={undefined}
        >
          Do Not Disturb
        </Text>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={Object {}}
          uppercase={false}
          virtual={undefined}
        >
          Yes
        </Text>
      </View>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      icon={true}
      last={true}
      style={Object {}}
      virtual={undefined}
    >
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#ffbcbc",
                "borderColor": "red",
                "borderWidth": 1,
                "height": 100,
                "justifyContent": "center",
                "margin": 10,
                "width": 300,
              },
              Object {
                "backgroundColor": "#8F8E93",
                "borderRadius": 2,
              },
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#333333",
                "margin": 20,
              }
            }
          >
            TouchableNativeFeedback is not supported on this platform!
          </Text>
        </View>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={Object {}}
          uppercase={false}
          virtual={undefined}
        >
          Software Update
        </Text>
      </View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={
            Array [
              Object {},
              Object {
                "backgroundColor": "#FD3C2D",
              },
            ]
          }
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            2
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`renders ListItem itemDivider 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
  virtual={undefined}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      itemDivider={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        A
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Aaron Bennet
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Ali Connors
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      last={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Angana Ghosh
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      itemDivider={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        B
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Bradley Horowitz
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Brian Swetland
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      last={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Brittany Kelso
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders ListItem itemHeader 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
  virtual={undefined}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      first={true}
      itemHeader={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        COMEDY
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Hangover
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Horrible Bosses
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      last={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Cop Out
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      itemHeader={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        HORROR
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        The Evil Dead
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Residential Evil
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      last={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Conjuring
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders ListItem noIndent 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
  virtual={undefined}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      noIndent={true}
      style={
        Array [
          Object {},
          Object {
            "backgroundColor": "#cde1f9",
          },
        ]
      }
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Caroline Aaron
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Urbino Cendre
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Lee Allen
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders ListItem selected 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
  virtual={undefined}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      selected={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Caroline Aaron
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Urbino Cendre
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Lee Allen
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders ListItem separator 1`] = `
<View
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
  virtual={undefined}
>
  <View
    bordered={true}
    style={Object {}}
    virtual={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={Object {}}
      uppercase={false}
      virtual={undefined}
    >
      MIDFIELD
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Caroline Aaron
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Urbino Cendre
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      last={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Lee Allen
      </Text>
    </View>
  </View>
  <View
    bordered={true}
    style={Object {}}
    virtual={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      disabled={false}
      ellipsizeMode="tail"
      style={Object {}}
      uppercase={false}
      virtual={undefined}
    >
      MIDFIELD
    </Text>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Caroline Aaron
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Urbino Cendre
      </Text>
    </View>
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hasTVPreferredFocus={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
        },
        undefined,
      ]
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      last={true}
      style={Object {}}
      virtual={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={Object {}}
        uppercase={false}
        virtual={undefined}
      >
        Lee Allen
      </Text>
    </View>
  </View>
</View>
`;

exports[`renders ListItem thumbnail 1`] = `
<RCTScrollView
  closeOnRowBeginSwipe={false}
  closeOnRowPress={true}
  closeOnScroll={true}
  dataArray={
    Array [
      Object {
        "img": 1,
        "note": "Its time to build a difference . .",
        "text": "Kumar Pratik",
      },
      Object {
        "img": 1,
        "note": "One needs courage to be happy and smiling all time . . ",
        "text": "Kumar Sanket",
      },
    ]
  }
  dataSource={
    ListViewDataSource {
      "items": 2,
    }
  }
  directionalDistanceChangeThreshold={2}
  disableLeftSwipe={false}
  disableRightSwipe={false}
  enableEmptySections={true}
  leftOpenValue={0}
  previewFirstRow={false}
  recalculateHiddenLayout={false}
  renderRow={[Function]}
  renderScrollComponent={[Function]}
  rightOpenValue={0}
  style={Object {}}
  swipeToOpenPercent={50}
  virtual={undefined}
>
  <View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        thumbnail={true}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Image
            size={55}
            source={1}
            square={true}
            style={Object {}}
            virtual={undefined}
          />
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Kumar Pratik
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            note={true}
            numberOfLines={1}
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Its time to build a difference . .
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffbcbc",
                  "borderColor": "red",
                  "borderWidth": 1,
                  "height": 100,
                  "justifyContent": "center",
                  "margin": 10,
                  "width": 300,
                },
                Object {
                  "borderRadius": 2,
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#333333",
                  "margin": 20,
                }
              }
            >
              TouchableNativeFeedback is not supported on this platform!
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={Object {}}
        thumbnail={true}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Image
            size={55}
            source={1}
            square={true}
            style={Object {}}
            virtual={undefined}
          />
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Kumar Sanket
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            note={true}
            numberOfLines={1}
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            One needs courage to be happy and smiling all time . . 
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffbcbc",
                  "borderColor": "red",
                  "borderWidth": 1,
                  "height": 100,
                  "justifyContent": "center",
                  "margin": 10,
                  "width": 300,
                },
                Object {
                  "borderRadius": 2,
                },
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Object {
                  "color": "#333333",
                  "margin": 20,
                }
              }
            >
              TouchableNativeFeedback is not supported on this platform!
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
