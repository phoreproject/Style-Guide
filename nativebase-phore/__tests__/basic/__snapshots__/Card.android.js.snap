// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Card Header and Footer 1`] = `
<View
  style={Object {}}
  virtual={undefined}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
      virtual={undefined}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": 10,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    padder={true}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          header={true}
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            NativeBase
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              NativeBase is a free and open source framework that enable developers to build high-quality mobile apps using React Native iOS and Android apps with a fusion of ES6.
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              NativeBase builds a layer on top of React Native that provides you with basic set of components for mobile application development.
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              Get on the mobile fast track with NativeBase, the fastest-growing platform and tool set for iOS and Android development.
            </Text>
          </View>
        </View>
        <View
          footer={true}
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            GeekyAnts
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders Card Image 1`] = `
<View
  style={Object {}}
  virtual={undefined}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
      virtual={undefined}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": 10,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    padder={true}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Image
              source={1}
              style={Object {}}
              virtual={undefined}
            />
            <View
              style={Object {}}
              virtual={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={Object {}}
                uppercase={false}
                virtual={undefined}
              >
                NativeBase
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                note={true}
                style={Object {}}
                uppercase={false}
                virtual={undefined}
              >
                GeekyAnts
              </Text>
            </View>
          </View>
        </View>
        <View
          cardBody={true}
          style={Object {}}
          virtual={undefined}
        >
          <Image
            source={1}
            style={
              Object {
                "flex": 1,
                "height": 200,
                "resizeMode": "cover",
                "width": null,
              }
            }
          />
        </View>
        <View
          style={
            Array [
              Object {},
              Object {
                "paddingVertical": 0,
              },
            ]
          }
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffbcbc",
                    "borderColor": "red",
                    "borderWidth": 1,
                    "height": 100,
                    "justifyContent": "center",
                    "margin": 10,
                    "width": 300,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#333333",
                    "margin": 20,
                  }
                }
              >
                TouchableNativeFeedback is not supported on this platform!
              </Text>
            </View>
          </View>
          <View
            style={Object {}}
            virtual={undefined}
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffbcbc",
                    "borderColor": "red",
                    "borderWidth": 1,
                    "height": 100,
                    "justifyContent": "center",
                    "margin": 10,
                    "width": 300,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#333333",
                    "margin": 20,
                  }
                }
              >
                TouchableNativeFeedback is not supported on this platform!
              </Text>
            </View>
          </View>
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              11h ago
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders Card List 1`] = `
<View
  style={Object {}}
  virtual={undefined}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
      virtual={undefined}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": 10,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    padder={true}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          bordered={true}
          header={true}
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            Social Applications
          </Text>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              active={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                    Object {
                      "color": "#DD5044",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              Google Plus
            </Text>
          </View>
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              active={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                    Object {
                      "color": "#3B579D",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              facebook
            </Text>
          </View>
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              active={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                    Object {
                      "color": "#55ACEE",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              Twitter
            </Text>
          </View>
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              active={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                    Object {
                      "color": "#FF4500",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              Reddit
            </Text>
          </View>
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              active={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                    Object {
                      "color": "#007BB6",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              LinkedIn
            </Text>
          </View>
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              active={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                    Object {
                      "color": "#D62727",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              YouTube
            </Text>
          </View>
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
              virtual={undefined}
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders Card Showcase 1`] = `
<View
  style={Object {}}
  virtual={undefined}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
      virtual={undefined}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": 10,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    padder={true}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          bordered={true}
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Image
              source={1}
              style={Object {}}
              virtual={undefined}
            />
            <View
              style={Object {}}
              virtual={undefined}
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={Object {}}
                uppercase={false}
                virtual={undefined}
              >
                NativeBase
              </Text>
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                note={true}
                style={Object {}}
                uppercase={false}
                virtual={undefined}
              >
                April 15, 2016
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Image
              source={1}
              style={
                Object {
                  "alignSelf": "center",
                  "height": 150,
                  "marginVertical": 5,
                  "resizeMode": "cover",
                  "width": 635.5932203389831,
                }
              }
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              NativeBase is a free and source framework that enable developers to build high-quality mobile apps using React Native iOS and Android apps with a fusion of ES6. NativeBase builds a layer on top of React Native that provides you with basic set of components for mobile application development.
            </Text>
          </View>
        </View>
        <View
          style={
            Array [
              Object {},
              Object {
                "paddingVertical": 0,
              },
            ]
          }
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffbcbc",
                    "borderColor": "red",
                    "borderWidth": 1,
                    "height": 100,
                    "justifyContent": "center",
                    "margin": 10,
                    "width": 300,
                  },
                  Object {
                    "borderRadius": 2,
                  },
                ]
              }
            >
              <Text
                accessible={true}
                allowFontScaling={true}
                disabled={false}
                ellipsizeMode="tail"
                style={
                  Object {
                    "color": "#333333",
                    "margin": 20,
                  }
                }
              >
                TouchableNativeFeedback is not supported on this platform!
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders basic Card 1`] = `
<View
  style={Object {}}
  virtual={undefined}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
      virtual={undefined}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": 10,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    padder={true}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              This is just a basic card with some text to boot.
            </Text>
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              Like it? Keep Scrolling...
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders bordered CardItem 1`] = `
<View
  style={Object {}}
  virtual={undefined}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
      virtual={undefined}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": 10,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    padder={true}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          bordered={true}
          header={true}
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            NativeBase
          </Text>
        </View>
        <View
          bordered={true}
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              NativeBase is a free and open source framework that enable developers to build high-quality mobile apps using React Native iOS and Android apps with a fusion of ES6.
            </Text>
          </View>
        </View>
        <View
          bordered={true}
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              NativeBase builds a layer on top of React Native that provides you with basic set of components for mobile application development.
            </Text>
          </View>
        </View>
        <View
          bordered={true}
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              Get on the mobile fast track with NativeBase, the fastest-growing platform and tool set for iOS and Android development.
            </Text>
          </View>
        </View>
        <View
          bordered={true}
          footer={true}
          style={Object {}}
          virtual={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            GeekyAnts
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders button CardItem 1`] = `
<View
  style={Object {}}
  virtual={undefined}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
      virtual={undefined}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": 10,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    padder={true}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        style={Object {}}
        virtual={undefined}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            NativeBase
          </Text>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              Click on any carditem
            </Text>
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={Object {}}
            uppercase={false}
            virtual={undefined}
          >
            GeekyAnts
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders transparent Card 1`] = `
<View
  style={Object {}}
  virtual={undefined}
>
  <View
    onLayout={[Function]}
  >
    <View
      style={Object {}}
      virtual={undefined}
    />
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": 10,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    padder={true}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <View>
      <View
        style={Object {}}
        transparent={true}
        virtual={undefined}
      >
        <View
          style={Object {}}
          virtual={undefined}
        >
          <View
            style={Object {}}
            virtual={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={Object {}}
              uppercase={false}
              virtual={undefined}
            >
              This is just a transparent card with some text to boot.
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
